{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","items","selectItem","good","setState","prevState","removeItem","filter","remaining","buttonSelection","isSelected","createMessage","exceptLastGood","slice","join","lastGood","length","className","this","map","includes","buttonText","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAe,CACbC,MAAO,CAAC,Q,EAGVC,WAAa,SAACC,GACZ,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAAEJ,MAAM,GAAD,mBAAMI,EAAUJ,OAAhB,CAAuBE,S,EAG9DG,WAAa,SAACH,GACZ,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BJ,MAAOI,EAAUJ,MAAMM,QAAO,SAAAC,GAAS,OAAIA,IAAcL,U,EAI7DM,gBAAkB,SAACC,EAAqBP,GACtC,OAAOO,EACH,EAAKJ,WAAWH,GAChB,EAAKD,WAAWC,I,EAGtBQ,cAAgB,WACd,IAAQV,EAAU,EAAKD,MAAfC,MAEFW,EAAiBX,EAAMY,MAAM,GAAI,GAAGC,KAAK,MACzCC,EAAWd,EAAMY,OAAO,GAE9B,OAAQZ,EAAMe,QACZ,KAAK,EACH,MAAO,oBACT,KAAK,EACH,MAAM,GAAN,OAAUf,EAAM,GAAhB,gBACF,KAAK,EACH,MAAM,GAAN,OAAUA,EAAM,GAAhB,gBAA0BA,EAAM,GAAhC,iBACF,QACE,MAAM,GAAN,OAAWW,EAAX,gBAAiCG,EAAjC,mB,4CAIN,WAA2B,IAAD,OACxB,OACE,qBAAKE,UAAU,MAAf,SACE,gCACE,sDACqBC,KAAKP,mBAG1B,6BACGb,EAAgBqB,KAAI,SAAChB,GACpB,IAAMO,EAAa,EAAKV,MAAMC,MAAMmB,SAASjB,GACvCkB,EAAaX,EAAa,SAAW,SAE3C,OACE,+BACE,+BACGP,IAGH,wBACEmB,KAAK,SACLC,QAAS,kBAAM,EAAKd,gBAAgBC,EAAYP,IAFlD,SAIGkB,MATIlB,UAgBZe,KAAKlB,MAAMC,MAAMe,QAClB,wBACEM,KAAK,SACLC,QAAS,WACP,EAAKnB,SAAS,CAAEH,MAAO,MAH3B,mC,GAtEMuB,IAAMC,WAqFT1B,ICtGf2B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a6b70571.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  items: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    items: ['Jam'],\n  };\n\n  selectItem = (good: string) => {\n    this.setState((prevState) => ({ items: [...prevState.items, good] }));\n  };\n\n  removeItem = (good: string) => {\n    this.setState((prevState) => ({\n      items: prevState.items.filter(remaining => remaining !== good),\n    }));\n  };\n\n  buttonSelection = (isSelected: boolean, good: string) => {\n    return isSelected\n      ? this.removeItem(good)\n      : this.selectItem(good);\n  };\n\n  createMessage = () => {\n    const { items } = this.state;\n\n    const exceptLastGood = items.slice(0, -1).join(', ');\n    const lastGood = items.slice(-1);\n\n    switch (items.length) {\n      case 0:\n        return 'No goods selected';\n      case 1:\n        return `${items[0]} is selected`;\n      case 2:\n        return `${items[0]} and ${items[1]} are selected`;\n      default:\n        return (`${exceptLastGood} and ${lastGood} are selected`);\n    }\n  };\n\n  render(): React.ReactNode {\n    return (\n      <div className=\"App\">\n        <div>\n          <h1>\n            {`Selected good: ${this.createMessage()}`}\n          </h1>\n\n          <ul>\n            {goodsFromServer.map((good: string) => {\n              const isSelected = this.state.items.includes(good);\n              const buttonText = isSelected ? 'Remove' : 'Select';\n\n              return (\n                <li key={good}>\n                  <span>\n                    {good}\n                  </span>\n\n                  <button\n                    type=\"button\"\n                    onClick={() => this.buttonSelection(isSelected, good)}\n                  >\n                    {buttonText}\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n\n          {!!this.state.items.length && (\n            <button\n              type=\"button\"\n              onClick={() => {\n                this.setState({ items: [] });\n              }}\n            >\n              Clear goods!\n            </button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}